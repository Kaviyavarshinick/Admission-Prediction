import joblib
import numpy as np
import pandas as pd
import streamlit as st
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

#Reading file as pandas DataFrame
df=pd.read_csv("admission_data.csv")

#Checking for null and empty values
df.isna()

#Statistics of the data
df.describe()

#Datatypes of each column in the DataFrame
df.info()
df.columns

#Renaming ambiguous column names
df=df.rename(columns={'Chance of Admit ':'Chance of Admit','LOR ':'LOR'})

#Dropping index column
df.reset_index(drop=True,inplace=True)

#Splitting data into features and target
features_X=df.drop('Chance of Admit',axis=1)
target_y=df['Chance of Admit']

#Splitting features(X) and target(y) into training and testing data
X_train,X_test,y_train,y_test=train_test_split(features_X,target_y,test_size=0.2,random_state=55)

#Scaling the data for better graph plotting
scaler=StandardScaler()
X_train=scaler.fit_transform(X_train)
X_test=scaler.transform(X_test)

#Training the model
lin_model=LinearRegression()
lin_model.fit(X_train,y_train)

#Testing the model
#y_pred=lin_model.predict(X_test)
scaled=scaler.transform([[300,114,3,2.5,2.5,9.65,1]])
y_pred=lin_model.predict(scaled)
scaled

#MSE for the Linear Regression model
mse=mean_squared_error(y_test,y_pred)*100

#Model Accuracy score
lin_model.score(X_test,y_test)*100

#Pickling the model using joblib
joblib.dump(lin_model,'GAP LinReg')
joblib.dump(scaler,'Scaler')
